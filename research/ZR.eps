%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 258 575 533
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Monday, February 20, 2017 6:09:40 PM GMT-06:00
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
808 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
808.000 0 l
808.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
287 370 233 24 rc
q
q
290 373 72 18 rc
q
[ 1.00000 0 0 1.00000 292.000 374.000 ] concat
0.470588 0 0.0549020 RG
newpath
0 7.00000 m
34.0000 7.00000 l
S
[ 1.00000 0 0 1.00000 -292.000 -374.000 ] concat
Q
[ 1.00000 0 0 1.00000 290.000 373.000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
37 0 34 17 rc
newpath
43.2656 4.06250 m
50.1562 4.06250 l
50.1562 4.34375 l
42.7812 13.5312 l
43.9375 13.5312 l
45.1770 13.5312 46.0520 13.4687 46.5625 13.3437  c
47.0729 13.2187 47.4974 13.0052 47.8359 12.7031  c
48.1744 12.4010 48.4583 11.9739 48.6875 11.4218  c
48.9687 11.4218 l
48.1093 14.0000 l
40.9687 14.0000 l
40.9687 13.7812 l
48.3437 4.60937 l
46.2812 4.60937 l
45.3854 4.60937 44.7552 4.64843 44.3906 4.72656  c
44.0260 4.80468 43.7135 4.96614 43.4531 5.21093  c
43.1927 5.45572 42.9687 5.82812 42.7812 6.32812  c
42.5312 6.32812 l
43.2656 4.06250 l
h
f
newpath
59.8906 5.56250 m
59.3281 7.54687 l
60.4687 7.54687 l
60.3437 8.01562 l
59.2031 8.01562 l
57.9531 12.3281 l
57.8177 12.7968 57.7500 13.0989 57.7500 13.2343  c
57.7500 13.3177 57.7682 13.3802 57.8046 13.4218  c
57.8411 13.4635 57.8854 13.4843 57.9375 13.4843  c
58.0625 13.4843 58.2239 13.4010 58.4218 13.2343  c
58.5364 13.1302 58.7968 12.8281 59.2031 12.3281  c
59.4531 12.5156 l
59.0052 13.1718 58.5781 13.6302 58.1718 13.8906  c
57.9010 14.0781 57.6250 14.1718 57.3437 14.1718  c
57.1354 14.1718 56.9609 14.1041 56.8203 13.9687  c
56.6796 13.8333 56.6093 13.6614 56.6093 13.4531  c
56.6093 13.1927 56.6875 12.7916 56.8437 12.2500  c
58.0781 8.01562 l
56.9687 8.01562 l
57.0468 7.71875 l
57.5781 7.57291 58.0234 7.35416 58.3828 7.06250  c
58.7421 6.77083 59.1406 6.27083 59.5781 5.56250  c
59.8906 5.56250 l
h
f
[ 1.00000 0 0 1.00000 51.0000 3.00000 ] concat
newpath
3.10067 13.6429 m
2.87516 14.0000 l
0.958389 12.8098 0 10.4298 0 6.86000  c
0 7.00000 l
0 7.14000 l
0 3.55762 0.958389 1.17762 2.87516 0  c
3.10067 0.338255 l
2.24877 1.06487 1.67874 2.08590 1.39060 3.40134  c
1.21521 4.21566 1.12751 5.36854 1.12751 6.86000  c
1.12751 7.00000 l
1.12751 7.14000 l
1.12751 8.61892 1.21521 9.76554 1.39060 10.5798  c
1.67874 11.8953 2.24877 12.9163 3.10067 13.6429  c
h
f
[ 1.00000 0 0 1.00000 -51.0000 -3.00000 ] concat
[ 1.00000 0 0 1.00000 62.0000 3.00000 ] concat
newpath
0 0.357047 m
0.225503 0 l
2.14228 1.19015 3.10067 3.57015 3.10067 7.14000  c
3.10067 7.00000 l
3.10067 6.86000 l
3.10067 10.4423 2.14228 12.8223 0.225503 14.0000  c
0 13.6617 l
0.851902 12.9351 1.42192 11.9140 1.71006 10.5986  c
1.88545 9.78434 1.97315 8.63145 1.97315 7.14000  c
1.97315 7.00000 l
1.97315 6.86000 l
1.97315 5.38107 1.88545 4.23445 1.71006 3.42013  c
1.42192 2.10469 0.851902 1.08366 0 0.357047  c
h
f
[ 1.00000 0 0 1.00000 -62.0000 -3.00000 ] concat
Q
cliprestore
newpath
0 0 m
0 18.0000 l
72.0000 18.0000 l
72.0000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 290.000 373.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -290.000 -373.000 ] concat
cliprestore
newpath
287.000 370.000 m
287.000 394.000 l
520.000 394.000 l
520.000 370.000 l
h
W
Q
q
361 373 157 18 rc
q
[ 1.00000 0 0 1.00000 363.000 374.000 ] concat
0 0.0549020 0.470588 RG
newpath
0 7.00000 m
34.0000 7.00000 l
S
[ 1.00000 0 0 1.00000 -363.000 -374.000 ] concat
Q
[ 1.00000 0 0 1.00000 361.000 373.000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
37 0 119 17 rc
newpath
43.2656 4.06250 m
50.1562 4.06250 l
50.1562 4.34375 l
42.7812 13.5312 l
43.9375 13.5312 l
45.1770 13.5312 46.0520 13.4687 46.5625 13.3437  c
47.0729 13.2187 47.4974 13.0052 47.8359 12.7031  c
48.1744 12.4010 48.4583 11.9739 48.6875 11.4218  c
48.9687 11.4218 l
48.1093 14.0000 l
40.9687 14.0000 l
40.9687 13.7812 l
48.3437 4.60937 l
46.2812 4.60937 l
45.3854 4.60937 44.7552 4.64843 44.3906 4.72656  c
44.0260 4.80468 43.7135 4.96614 43.4531 5.21093  c
43.1927 5.45572 42.9687 5.82812 42.7812 6.32812  c
42.5312 6.32812 l
43.2656 4.06250 l
h
f
newpath
59.8906 5.56250 m
59.3281 7.54687 l
60.4687 7.54687 l
60.3437 8.01562 l
59.2031 8.01562 l
57.9531 12.3281 l
57.8177 12.7968 57.7500 13.0989 57.7500 13.2343  c
57.7500 13.3177 57.7682 13.3802 57.8046 13.4218  c
57.8411 13.4635 57.8854 13.4843 57.9375 13.4843  c
58.0625 13.4843 58.2239 13.4010 58.4218 13.2343  c
58.5364 13.1302 58.7968 12.8281 59.2031 12.3281  c
59.4531 12.5156 l
59.0052 13.1718 58.5781 13.6302 58.1718 13.8906  c
57.9010 14.0781 57.6250 14.1718 57.3437 14.1718  c
57.1354 14.1718 56.9609 14.1041 56.8203 13.9687  c
56.6796 13.8333 56.6093 13.6614 56.6093 13.4531  c
56.6093 13.1927 56.6875 12.7916 56.8437 12.2500  c
58.0781 8.01562 l
56.9687 8.01562 l
57.0468 7.71875 l
57.5781 7.57291 58.0234 7.35416 58.3828 7.06250  c
58.7421 6.77083 59.1406 6.27083 59.5781 5.56250  c
59.8906 5.56250 l
h
f
newpath
60.8125 16.5000 m
60.8125 16.1718 l
61.3125 16.0052 61.7005 15.7474 61.9765 15.3984  c
62.2526 15.0494 62.3906 14.6822 62.3906 14.2968  c
62.3906 14.2031 62.3697 14.1250 62.3281 14.0625  c
62.2864 14.0208 62.2500 14.0000 62.2187 14.0000  c
62.1666 14.0000 62.0520 14.0468 61.8750 14.1406  c
61.7812 14.1822 61.6875 14.2031 61.5937 14.2031  c
61.3541 14.2031 61.1640 14.1328 61.0234 13.9921  c
60.8828 13.8515 60.8125 13.6562 60.8125 13.4062  c
60.8125 13.1666 60.9036 12.9609 61.0859 12.7890  c
61.2682 12.6171 61.4895 12.5312 61.7500 12.5312  c
62.0729 12.5312 62.3593 12.6718 62.6093 12.9531  c
62.8593 13.2343 62.9843 13.6093 62.9843 14.0781  c
62.9843 14.5781 62.8099 15.0442 62.4609 15.4765  c
62.1119 15.9088 61.5625 16.2500 60.8125 16.5000  c
h
f
newpath
68.7656 5.04687 m
71.1718 3.85937 l
71.4218 3.85937 l
71.4218 12.2500 l
71.4218 12.8020 71.4453 13.1484 71.4921 13.2890  c
71.5390 13.4296 71.6354 13.5364 71.7812 13.6093  c
71.9270 13.6822 72.2239 13.7239 72.6718 13.7343  c
72.6718 14.0000 l
68.9375 14.0000 l
68.9375 13.7343 l
69.4062 13.7239 69.7083 13.6822 69.8437 13.6093  c
69.9791 13.5364 70.0729 13.4401 70.1250 13.3203  c
70.1770 13.2005 70.2031 12.8437 70.2031 12.2500  c
70.2031 6.89062 l
70.2031 6.16145 70.1822 5.69791 70.1406 5.50000  c
70.0989 5.34375 70.0338 5.22916 69.9453 5.15625  c
69.8567 5.08333 69.7500 5.04687 69.6250 5.04687  c
69.4375 5.04687 69.1875 5.11979 68.8750 5.26562  c
68.7656 5.04687 l
h
81.4843 10.3437 m
81.4843 11.3750 l
80.1406 11.3750 l
80.1406 14.0000 l
78.9375 14.0000 l
78.9375 11.3750 l
74.7343 11.3750 l
74.7343 10.4375 l
79.3437 3.85937 l
80.1406 3.85937 l
80.1406 10.3437 l
81.4843 10.3437 l
h
78.9375 10.3437 m
78.9375 5.40625 l
75.4531 10.3437 l
78.9375 10.3437 l
h
83.8750 12.5781 m
84.1041 12.5781 84.2968 12.6588 84.4531 12.8203  c
84.6093 12.9817 84.6875 13.1718 84.6875 13.3906  c
84.6875 13.6197 84.6093 13.8125 84.4531 13.9687  c
84.2968 14.1250 84.1041 14.2031 83.8750 14.2031  c
83.6458 14.2031 83.4531 14.1250 83.2968 13.9687  c
83.1406 13.8125 83.0625 13.6197 83.0625 13.3906  c
83.0625 13.1614 83.1406 12.9687 83.2968 12.8125  c
83.4531 12.6562 83.6458 12.5781 83.8750 12.5781  c
h
87.5156 5.04687 m
89.9218 3.85937 l
90.1718 3.85937 l
90.1718 12.2500 l
90.1718 12.8020 90.1953 13.1484 90.2421 13.2890  c
90.2890 13.4296 90.3854 13.5364 90.5312 13.6093  c
90.6770 13.6822 90.9739 13.7239 91.4218 13.7343  c
91.4218 14.0000 l
87.6875 14.0000 l
87.6875 13.7343 l
88.1562 13.7239 88.4583 13.6822 88.5937 13.6093  c
88.7291 13.5364 88.8229 13.4401 88.8750 13.3203  c
88.9270 13.2005 88.9531 12.8437 88.9531 12.2500  c
88.9531 6.89062 l
88.9531 6.16145 88.9322 5.69791 88.8906 5.50000  c
88.8489 5.34375 88.7838 5.22916 88.6953 5.15625  c
88.6067 5.08333 88.5000 5.04687 88.3750 5.04687  c
88.1875 5.04687 87.9375 5.11979 87.6250 5.26562  c
87.5156 5.04687 l
h
94.0156 5.95312 m
94.2968 5.28645 94.6536 4.77083 95.0859 4.40625  c
95.5182 4.04166 96.0572 3.85937 96.7031 3.85937  c
97.4947 3.85937 98.1041 4.11979 98.5312 4.64062  c
98.8541 5.02604 99.0156 5.43750 99.0156 5.87500  c
99.0156 6.60416 98.5625 7.35416 97.6562 8.12500  c
98.2604 8.36458 98.7187 8.70572 99.0312 9.14843  c
99.3437 9.59114 99.5000 10.1145 99.5000 10.7187  c
99.5000 11.5729 99.2291 12.3125 98.6875 12.9375  c
97.9687 13.7604 96.9375 14.1718 95.5937 14.1718  c
94.9166 14.1718 94.4583 14.0885 94.2187 13.9218  c
93.9791 13.7552 93.8593 13.5781 93.8593 13.3906  c
93.8593 13.2447 93.9166 13.1197 94.0312 13.0156  c
94.1458 12.9114 94.2812 12.8593 94.4375 12.8593  c
94.5625 12.8593 94.6875 12.8802 94.8125 12.9218  c
94.8958 12.9427 95.0859 13.0286 95.3828 13.1796  c
95.6796 13.3307 95.8802 13.4218 95.9843 13.4531  c
96.1718 13.5052 96.3645 13.5312 96.5625 13.5312  c
97.0625 13.5312 97.4974 13.3385 97.8671 12.9531  c
98.2369 12.5677 98.4218 12.1145 98.4218 11.5937  c
98.4218 11.2083 98.3385 10.8333 98.1718 10.4687  c
98.0364 10.1875 97.8958 9.97916 97.7500 9.84375  c
97.5416 9.64583 97.2526 9.46875 96.8828 9.31250  c
96.5130 9.15625 96.1406 9.07812 95.7656 9.07812  c
95.5312 9.07812 l
95.5312 8.84375 l
95.9166 8.80208 96.3020 8.66666 96.6875 8.43750  c
97.0729 8.20833 97.3541 7.93229 97.5312 7.60937  c
97.7083 7.28645 97.7968 6.93229 97.7968 6.54687  c
97.7968 6.04687 97.6406 5.64062 97.3281 5.32812  c
97.0156 5.01562 96.6250 4.85937 96.1562 4.85937  c
95.3958 4.85937 94.7604 5.26562 94.2500 6.07812  c
94.0156 5.95312 l
h
107.734 10.3437 m
107.734 11.3750 l
106.390 11.3750 l
106.390 14.0000 l
105.187 14.0000 l
105.187 11.3750 l
100.984 11.3750 l
100.984 10.4375 l
105.593 3.85937 l
106.390 3.85937 l
106.390 10.3437 l
107.734 10.3437 l
h
105.187 10.3437 m
105.187 5.40625 l
101.703 10.3437 l
105.187 10.3437 l
h
109.765 4.06250 m
115.078 4.06250 l
115.078 4.34375 l
111.765 14.2031 l
110.953 14.2031 l
113.921 5.26562 l
111.187 5.26562 l
110.635 5.26562 110.244 5.32812 110.015 5.45312  c
109.599 5.68229 109.265 6.03125 109.015 6.50000  c
108.812 6.42187 l
109.765 4.06250 l
h
122.625 12.0937 m
121.937 14.0000 l
116.078 14.0000 l
116.078 13.7343 l
117.796 12.1614 119.007 10.8750 119.710 9.87500  c
120.414 8.87500 120.765 7.96354 120.765 7.14062  c
120.765 6.51562 120.572 6.00000 120.187 5.59375  c
119.802 5.18750 119.338 4.98437 118.796 4.98437  c
118.317 4.98437 117.882 5.12760 117.492 5.41406  c
117.101 5.70052 116.812 6.11979 116.625 6.67187  c
116.359 6.67187 l
116.484 5.76562 116.799 5.07031 117.304 4.58593  c
117.809 4.10156 118.437 3.85937 119.187 3.85937  c
120.000 3.85937 120.674 4.11979 121.210 4.64062  c
121.747 5.16145 122.015 5.77083 122.015 6.46875  c
122.015 6.96875 121.901 7.47395 121.671 7.98437  c
121.307 8.77604 120.718 9.60937 119.906 10.4843  c
118.697 11.8177 117.937 12.6197 117.625 12.8906  c
120.218 12.8906 l
120.750 12.8906 121.122 12.8724 121.335 12.8359  c
121.549 12.7994 121.742 12.7213 121.914 12.6015  c
122.085 12.4817 122.234 12.3125 122.359 12.0937  c
122.625 12.0937 l
h
129.765 4.06250 m
129.187 5.31250 l
126.203 5.31250 l
125.546 6.64062 l
126.838 6.83854 127.864 7.32291 128.625 8.09375  c
129.270 8.75000 129.593 9.53125 129.593 10.4375  c
129.593 10.9583 129.489 11.4401 129.281 11.8828  c
129.072 12.3255 128.807 12.7031 128.484 13.0156  c
128.161 13.3281 127.802 13.5781 127.406 13.7656  c
126.843 14.0364 126.265 14.1718 125.671 14.1718  c
125.078 14.1718 124.645 14.0703 124.375 13.8671  c
124.104 13.6640 123.968 13.4427 123.968 13.2031  c
123.968 13.0677 124.026 12.9479 124.140 12.8437  c
124.255 12.7395 124.395 12.6875 124.562 12.6875  c
124.687 12.6875 124.796 12.7057 124.890 12.7421  c
124.984 12.7786 125.145 12.8802 125.375 13.0468  c
125.750 13.2968 126.125 13.4218 126.500 13.4218  c
127.072 13.4218 127.572 13.2057 128.000 12.7734  c
128.427 12.3411 128.640 11.8125 128.640 11.1875  c
128.640 10.5937 128.447 10.0364 128.062 9.51562  c
127.677 8.99479 127.145 8.59375 126.468 8.31250  c
125.937 8.09375 125.213 7.96354 124.296 7.92187  c
126.203 4.06250 l
129.765 4.06250 l
h
132.515 5.04687 m
134.921 3.85937 l
135.171 3.85937 l
135.171 12.2500 l
135.171 12.8020 135.195 13.1484 135.242 13.2890  c
135.289 13.4296 135.385 13.5364 135.531 13.6093  c
135.677 13.6822 135.974 13.7239 136.421 13.7343  c
136.421 14.0000 l
132.687 14.0000 l
132.687 13.7343 l
133.156 13.7239 133.458 13.6822 133.593 13.6093  c
133.729 13.5364 133.822 13.4401 133.875 13.3203  c
133.927 13.2005 133.953 12.8437 133.953 12.2500  c
133.953 6.89062 l
133.953 6.16145 133.932 5.69791 133.890 5.50000  c
133.849 5.34375 133.783 5.22916 133.695 5.15625  c
133.606 5.08333 133.500 5.04687 133.375 5.04687  c
133.187 5.04687 132.937 5.11979 132.625 5.26562  c
132.515 5.04687 l
h
145.234 10.3437 m
145.234 11.3750 l
143.890 11.3750 l
143.890 14.0000 l
142.687 14.0000 l
142.687 11.3750 l
138.484 11.3750 l
138.484 10.4375 l
143.093 3.85937 l
143.890 3.85937 l
143.890 10.3437 l
145.234 10.3437 l
h
142.687 10.3437 m
142.687 5.40625 l
139.203 10.3437 l
142.687 10.3437 l
h
f
[ 1.00000 0 0 1.00000 51.0000 3.00000 ] concat
newpath
3.10067 13.6429 m
2.87516 14.0000 l
0.958389 12.8098 0 10.4298 0 6.86000  c
0 7.00000 l
0 7.14000 l
0 3.55762 0.958389 1.17762 2.87516 0  c
3.10067 0.338255 l
2.24877 1.06487 1.67874 2.08590 1.39060 3.40134  c
1.21521 4.21566 1.12751 5.36854 1.12751 6.86000  c
1.12751 7.00000 l
1.12751 7.14000 l
1.12751 8.61892 1.21521 9.76554 1.39060 10.5798  c
1.67874 11.8953 2.24877 12.9163 3.10067 13.6429  c
h
f
[ 1.00000 0 0 1.00000 -51.0000 -3.00000 ] concat
[ 1.00000 0 0 1.00000 147.000 3.00000 ] concat
newpath
0 0.357047 m
0.225503 0 l
2.14228 1.19015 3.10067 3.57015 3.10067 7.14000  c
3.10067 7.00000 l
3.10067 6.86000 l
3.10067 10.4423 2.14228 12.8223 0.225503 14.0000  c
0 13.6617 l
0.851902 12.9351 1.42192 11.9140 1.71006 10.5986  c
1.88545 9.78434 1.97315 8.63145 1.97315 7.14000  c
1.97315 7.00000 l
1.97315 6.86000 l
1.97315 5.38107 1.88545 4.23445 1.71006 3.42013  c
1.42192 2.10469 0.851902 1.08366 0 0.357047  c
h
f
[ 1.00000 0 0 1.00000 -147.000 -3.00000 ] concat
Q
cliprestore
newpath
0 0 m
0 18.0000 l
157.000 18.0000 l
157.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 361.000 373.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 -361.000 -373.000 ] concat
cliprestore
newpath
287.000 370.000 m
287.000 394.000 l
520.000 394.000 l
520.000 370.000 l
h
W
Q
Q
1.00000 w
2 J
0 j
newpath
288.500 371.500 m
517.500 371.500 l
517.500 391.500 l
288.500 391.500 l
288.500 371.500 l
h
S
1.50000 w
0 J
1 j
Q
0 0 808 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 798 362 rc
1.00000 w
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
newpath
42.0000 322.000 m
42.0000 1.00314 l
S
newpath
191.498 322.000 m
191.498 1.00314 l
S
newpath
340.997 322.000 m
340.997 1.00314 l
S
newpath
490.496 322.000 m
490.496 1.00314 l
S
newpath
639.995 322.000 m
639.995 1.00314 l
S
newpath
789.494 322.000 m
789.494 1.00314 l
S
0.913725 0.913725 0.913725 RG
newpath
116.749 322.000 m
116.749 1.00314 l
S
newpath
266.248 322.000 m
266.248 1.00314 l
S
newpath
415.747 322.000 m
415.747 1.00314 l
S
newpath
565.246 322.000 m
565.246 1.00314 l
S
newpath
714.744 322.000 m
714.744 1.00314 l
S
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
newpath
40.0000 288.103 m
791.494 288.103 l
S
newpath
40.0000 240.125 m
791.494 240.125 l
S
newpath
40.0000 192.148 m
791.494 192.148 l
S
newpath
40.0000 144.171 m
791.494 144.171 l
S
newpath
40.0000 96.1936 m
791.494 96.1936 l
S
newpath
40.0000 48.2162 m
791.494 48.2162 l
S
0.913725 0.913725 0.913725 RG
newpath
40.0000 312.092 m
791.494 312.092 l
S
newpath
40.0000 264.114 m
791.494 264.114 l
S
newpath
40.0000 216.137 m
791.494 216.137 l
S
newpath
40.0000 168.159 m
791.494 168.159 l
S
newpath
40.0000 120.182 m
791.494 120.182 l
S
newpath
40.0000 72.2049 m
791.494 72.2049 l
S
newpath
40.0000 24.2275 m
791.494 24.2275 l
S
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
1.50000 w
0 J
1 j
q
q
41.0000 1.00313 750.494 319.996 rc
0.470588 0 0.0549020 RG
newpath
42.0000 214.235 m
45.9300 206.728 l
49.3495 195.661 l
53.1951 185.848 l
57.0661 179.340 l
60.9188 175.195 l
64.4907 172.707 l
68.1893 171.055 l
72.0143 170.039 l
75.8270 169.537 l
79.7489 169.425 l
83.2033 169.597 l
87.0921 170.044 l
90.9969 170.723 l
94.7599 171.571 l
98.1771 172.490 l
102.240 173.755 l
105.682 174.962 l
109.686 176.515 l
113.231 178.017 l
117.119 179.794 l
120.822 181.606 l
124.686 183.613 l
128.234 185.552 l
132.061 187.739 l
136.036 190.101 l
139.496 192.220 l
143.233 194.561 l
147.094 197.019 l
150.872 199.440 l
154.526 201.777 l
158.584 204.337 l
162.230 206.577 l
166.124 208.872 l
169.651 210.836 l
173.508 212.817 l
177.137 214.488 l
180.930 215.993 l
184.639 217.181 l
188.521 218.079 l
192.261 218.563 l
196.085 218.622 l
199.877 218.197 l
203.362 217.344 l
207.356 215.774 l
210.928 213.798 l
214.737 211.060 l
218.382 207.801 l
222.430 203.424 l
225.935 198.975 l
229.913 193.176 l
233.539 187.201 l
237.505 179.928 l
240.927 173.057 l
244.825 164.601 l
248.589 155.850 l
252.351 146.603 l
256.100 136.973 l
259.701 127.421 l
263.593 116.878 l
267.303 106.746 l
271.208 96.1419 l
274.743 86.7309 l
278.649 76.7012 l
282.391 67.6234 l
286.124 59.2490 l
290.022 51.4046 l
293.613 45.1491 l
297.291 39.8508 l
301.351 35.4624 l
303.189 34.0221 l
305.027 32.9409 l
305.967 32.5306 l
306.907 32.2187 l
307.847 32.0065 l
308.787 31.8953 l
309.743 31.8868 l
310.699 31.9848 l
311.655 32.1904 l
312.611 32.5042 l
314.368 33.3656 l
316.125 34.5979 l
319.872 38.4666 l
323.590 43.9616 l
327.567 51.6077 l
331.077 59.7882 l
335.126 70.7493 l
338.780 81.8697 l
342.396 93.8228 l
346.284 107.477 l
350.188 121.718 l
353.739 134.849 l
357.511 148.653 l
361.192 161.665 l
365.183 174.874 l
368.635 185.245 l
372.601 195.599 l
376.328 203.508 l
380.020 209.334 l
381.868 211.430 l
383.715 212.949 l
384.657 213.495 l
385.599 213.884 l
386.070 214.019 l
386.541 214.113 l
387.012 214.168 l
387.483 214.182 l
387.983 214.153 l
388.482 214.077 l
388.981 213.956 l
389.480 213.789 l
390.479 213.316 l
391.478 212.658 l
393.309 210.968 l
395.140 208.656 l
398.755 202.291 l
402.620 192.942 l
406.476 181.188 l
409.938 168.805 l
414.038 152.265 l
417.469 137.217 l
421.481 118.712 l
425.311 100.667 l
428.731 84.6988 l
432.576 67.4257 l
436.447 51.3275 l
440.300 37.1416 l
443.872 26.0656 l
447.570 17.0855 l
451.395 10.7938 l
453.302 8.87707 l
455.208 7.80200 l
455.698 7.66345 l
456.189 7.58166 l
456.679 7.55682 l
457.169 7.58889 l
457.659 7.67804 l
458.150 7.82428 l
458.640 8.02755 l
459.130 8.28781 l
460.857 9.65741 l
462.584 11.7260 l
466.473 18.8685 l
470.378 29.2875 l
474.141 42.0510 l
477.558 55.5737 l
481.622 73.4619 l
485.064 89.6012 l
489.068 108.781 l
492.612 125.465 l
496.501 142.710 l
500.204 157.418 l
504.067 170.309 l
507.615 179.427 l
509.529 183.119 l
511.442 185.890 l
512.436 186.952 l
513.430 187.751 l
513.927 188.051 l
514.424 188.283 l
514.920 188.448 l
515.417 188.545 l
515.850 188.575 l
516.282 188.552 l
516.715 188.479 l
517.147 188.353 l
518.013 187.946 l
518.878 187.333 l
520.746 185.304 l
522.615 182.327 l
526.476 173.285 l
530.253 160.961 l
533.908 146.225 l
537.966 127.329 l
541.612 108.822 l
545.505 88.3589 l
549.033 70.0005 l
552.890 51.0449 l
556.518 35.1017 l
560.312 21.2127 l
564.020 11.0694 l
565.962 7.30664 l
567.903 4.69049 l
568.838 3.85446 l
569.772 3.29989 l
570.240 3.12927 l
570.707 3.03024 l
571.175 3.00314 l
571.642 3.04818 l
572.120 3.16909 l
572.598 3.36587 l
573.076 3.63858 l
573.554 3.98727 l
574.510 4.91259 l
575.466 6.14111 l
579.259 13.9551 l
582.743 25.0964 l
586.737 42.0588 l
590.309 60.4239 l
594.118 82.5149 l
597.764 105.198 l
601.812 130.986 l
605.317 152.829 l
609.295 175.930 l
612.921 194.467 l
616.887 211.043 l
620.309 221.630 l
622.258 225.961 l
624.206 229.000 l
625.147 229.997 l
626.089 230.685 l
626.559 230.913 l
627.030 231.064 l
627.500 231.138 l
627.971 231.134 l
628.441 231.054 l
628.911 230.898 l
629.382 230.666 l
629.852 230.358 l
630.792 229.518 l
631.733 228.384 l
635.481 221.068 l
639.082 210.230 l
642.975 195.105 l
646.685 178.348 l
650.590 159.435 l
654.124 142.289 l
658.031 124.577 l
661.772 110.010 l
665.505 98.8751 l
667.454 94.7054 l
669.404 91.8000 l
670.301 90.9101 l
671.199 90.3123 l
671.648 90.1246 l
672.097 90.0119 l
672.546 89.9747 l
672.995 90.0136 l
673.454 90.1326 l
673.914 90.3321 l
674.374 90.6125 l
674.833 90.9740 l
675.753 91.9407 l
676.672 93.2327 l
680.733 102.788 l
684.409 116.612 l
688.169 135.256 l
691.992 158.010 l
695.507 181.312 l
699.254 207.459 l
702.971 233.413 l
706.949 259.622 l
710.458 280.150 l
714.508 299.443 l
718.162 311.805 l
719.970 315.920 l
721.777 318.631 l
722.749 319.494 l
723.721 319.937 l
724.207 320.000 l
724.693 319.957 l
725.179 319.809 l
725.665 319.555 l
727.617 317.480 l
729.569 313.743 l
733.121 302.891 l
736.893 286.226 l
740.574 265.800 l
744.564 240.399 l
748.017 216.977 l
751.982 190.047 l
755.710 166.249 l
759.402 145.537 l
763.096 128.840 l
766.865 116.915 l
768.862 112.913 l
770.859 110.589 l
771.317 110.295 l
771.775 110.090 l
772.233 109.975 l
772.690 109.948 l
773.148 110.009 l
773.606 110.159 l
774.064 110.396 l
774.522 110.720 l
776.329 112.833 l
778.137 116.231 l
782.002 127.424 l
785.858 143.017 l
789.494 160.518 l
S
cliprestore
newpath
0 0 m
0 362.000 l
798.000 362.000 l
798.000 0 l
h
W
Q
q
41.0000 1.00313 750.494 319.996 rc
0 0.0549020 0.470588 RG
newpath
42.0000 139.214 m
45.9300 139.661 l
49.3495 140.397 l
53.1951 141.057 l
57.0661 141.491 l
60.9188 141.760 l
64.4907 141.911 l
68.1893 142.000 l
72.0143 142.038 l
75.8270 142.034 l
79.7489 141.995 l
83.2033 141.936 l
87.0921 141.844 l
90.9969 141.725 l
94.7599 141.587 l
98.1771 141.442 l
102.240 141.243 l
105.682 141.052 l
109.686 140.804 l
113.231 140.558 l
117.119 140.260 l
120.822 139.946 l
124.686 139.586 l
128.234 139.225 l
132.061 138.799 l
136.036 138.316 l
139.496 137.859 l
143.233 137.327 l
147.094 136.732 l
150.872 136.105 l
154.526 135.453 l
158.584 134.675 l
162.230 133.927 l
166.124 133.076 l
169.651 132.258 l
173.508 131.311 l
177.137 130.370 l
180.930 129.336 l
184.639 128.277 l
188.521 127.117 l
192.261 125.954 l
196.085 124.721 l
199.877 123.460 l
203.362 122.270 l
207.356 120.878 l
210.928 119.611 l
214.737 118.248 l
218.382 116.937 l
222.430 115.486 l
225.935 114.243 l
229.913 112.860 l
233.539 111.636 l
237.505 110.352 l
240.927 109.302 l
244.825 108.184 l
248.589 107.199 l
252.351 106.322 l
256.100 105.569 l
259.701 104.974 l
263.593 104.485 l
265.448 104.313 l
267.303 104.182 l
269.256 104.091 l
271.208 104.048 l
272.092 104.046 l
272.975 104.053 l
273.859 104.072 l
274.743 104.101 l
276.696 104.204 l
278.649 104.361 l
282.391 104.816 l
286.124 105.478 l
290.022 106.392 l
293.613 107.438 l
297.291 108.708 l
301.351 110.340 l
305.027 112.016 l
308.787 113.914 l
312.611 116.018 l
316.125 118.092 l
319.872 120.429 l
323.590 122.854 l
327.567 125.535 l
331.077 127.948 l
335.126 130.754 l
338.780 133.273 l
342.396 135.721 l
346.284 138.270 l
350.188 140.706 l
353.739 142.783 l
357.511 144.814 l
361.192 146.595 l
365.183 148.274 l
368.635 149.495 l
372.601 150.616 l
376.328 151.382 l
378.174 151.656 l
380.020 151.859 l
380.944 151.934 l
381.868 151.992 l
382.791 152.033 l
383.715 152.056 l
384.657 152.061 l
385.599 152.049 l
386.541 152.019 l
387.483 151.972 l
389.480 151.814 l
391.478 151.581 l
395.140 150.968 l
398.755 150.145 l
402.620 149.054 l
406.476 147.784 l
409.938 146.522 l
414.038 144.924 l
417.469 143.537 l
421.481 141.907 l
425.311 140.389 l
428.731 139.102 l
432.576 137.770 l
436.447 136.592 l
440.300 135.614 l
443.872 134.905 l
447.570 134.390 l
449.483 134.216 l
451.395 134.104 l
452.349 134.073 l
453.302 134.057 l
454.255 134.057 l
455.208 134.073 l
457.169 134.154 l
459.130 134.301 l
460.857 134.481 l
462.584 134.709 l
466.473 135.383 l
470.378 136.258 l
474.141 137.257 l
477.558 138.264 l
481.622 139.541 l
485.064 140.650 l
489.068 141.926 l
492.612 143.002 l
496.501 144.081 l
500.204 144.973 l
504.067 145.729 l
507.615 146.243 l
509.529 146.443 l
511.442 146.587 l
512.436 146.639 l
513.430 146.675 l
514.424 146.696 l
515.417 146.702 l
516.282 146.694 l
517.147 146.674 l
518.013 146.643 l
518.878 146.600 l
520.746 146.470 l
522.615 146.289 l
526.476 145.764 l
530.253 145.077 l
533.908 144.280 l
537.966 143.286 l
541.612 142.338 l
545.505 141.315 l
549.033 140.421 l
552.890 139.523 l
556.518 138.793 l
560.312 138.183 l
562.166 137.951 l
564.020 137.766 l
565.962 137.626 l
567.903 137.542 l
568.838 137.522 l
569.772 137.516 l
570.707 137.523 l
571.642 137.543 l
573.554 137.626 l
575.466 137.765 l
577.362 137.956 l
579.259 138.198 l
582.743 138.767 l
586.737 139.592 l
590.309 140.455 l
594.118 141.466 l
597.764 142.479 l
601.812 143.605 l
605.317 144.538 l
609.295 145.504 l
612.921 146.262 l
616.887 146.920 l
620.309 147.326 l
622.258 147.485 l
624.206 147.590 l
625.147 147.621 l
626.089 147.640 l
627.030 147.647 l
627.971 147.641 l
629.852 147.593 l
631.733 147.498 l
633.607 147.359 l
635.481 147.179 l
639.082 146.731 l
642.975 146.125 l
646.685 145.470 l
650.590 144.745 l
654.124 144.100 l
658.031 143.447 l
661.772 142.920 l
665.505 142.528 l
667.454 142.385 l
669.404 142.289 l
670.301 142.261 l
671.199 142.244 l
672.097 142.237 l
672.995 142.241 l
674.833 142.284 l
676.672 142.372 l
678.702 142.521 l
680.733 142.723 l
684.409 143.215 l
688.169 143.864 l
691.992 144.642 l
695.507 145.426 l
699.254 146.292 l
702.971 147.138 l
706.949 147.975 l
710.458 148.618 l
714.508 149.204 l
716.335 149.405 l
718.162 149.562 l
719.970 149.673 l
721.777 149.738 l
722.749 149.754 l
723.721 149.757 l
724.693 149.746 l
725.665 149.722 l
727.617 149.633 l
729.569 149.494 l
733.121 149.116 l
736.893 148.562 l
740.574 147.902 l
744.564 147.099 l
748.017 146.371 l
751.982 145.546 l
755.710 144.828 l
759.402 144.211 l
763.096 143.721 l
764.981 143.528 l
766.865 143.377 l
768.862 143.264 l
770.859 143.201 l
771.775 143.188 l
772.690 143.186 l
773.606 143.193 l
774.522 143.211 l
776.329 143.275 l
778.137 143.375 l
782.002 143.697 l
785.858 144.138 l
789.494 144.626 l
S
cliprestore
newpath
0 0 m
0 362.000 l
798.000 362.000 l
798.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
40.0000 322.000 m
791.494 322.000 l
S
newpath
40.0000 1.00314 m
791.494 1.00314 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
409 346 13 15 rc
newpath
415.250 352.250 m
415.458 352.468 415.614 352.692 415.718 352.921  c
415.802 353.067 415.927 353.463 416.093 354.109  c
416.656 353.281 l
416.802 353.072 416.981 352.877 417.195 352.695  c
417.408 352.513 417.593 352.385 417.750 352.312  c
417.854 352.270 417.968 352.250 418.093 352.250  c
418.270 352.250 418.414 352.299 418.523 352.398  c
418.632 352.497 418.687 352.614 418.687 352.750  c
418.687 352.916 418.656 353.031 418.593 353.093  c
418.479 353.197 418.343 353.250 418.187 353.250  c
418.093 353.250 418.000 353.229 417.906 353.187  c
417.708 353.125 417.572 353.093 417.500 353.093  c
417.395 353.093 417.276 353.151 417.140 353.265  c
416.880 353.484 416.567 353.911 416.203 354.546  c
416.718 356.718 l
416.802 357.052 416.869 357.252 416.921 357.320  c
416.974 357.388 417.031 357.421 417.093 357.421  c
417.177 357.421 417.281 357.375 417.406 357.281  c
417.635 357.083 417.833 356.828 418.000 356.515  c
418.218 356.625 l
417.947 357.125 417.609 357.541 417.203 357.875  c
416.974 358.062 416.776 358.156 416.609 358.156  c
416.369 358.156 416.182 358.020 416.046 357.750  c
415.953 357.583 415.770 356.875 415.500 355.625  c
414.833 356.770 414.302 357.505 413.906 357.828  c
413.645 358.046 413.395 358.156 413.156 358.156  c
412.989 358.156 412.833 358.093 412.687 357.968  c
412.593 357.875 412.546 357.750 412.546 357.593  c
412.546 357.458 412.593 357.343 412.687 357.250  c
412.781 357.156 412.895 357.109 413.031 357.109  c
413.166 357.109 413.307 357.177 413.453 357.312  c
413.567 357.406 413.656 357.453 413.718 357.453  c
413.760 357.453 413.822 357.421 413.906 357.359  c
414.104 357.192 414.375 356.843 414.718 356.312  c
415.062 355.781 415.286 355.395 415.390 355.156  c
415.130 354.125 414.989 353.583 414.968 353.531  c
414.875 353.250 414.750 353.052 414.593 352.937  c
414.437 352.822 414.203 352.765 413.890 352.765  c
413.796 352.765 413.687 352.770 413.562 352.781  c
413.562 352.546 l
415.250 352.250 l
h
f
Q
cliprestore
newpath
0 0 m
0 362.000 l
798.000 362.000 l
798.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
1.00000 w
2 J
0 j
newpath
42.0000 322.000 m
42.0000 328.040 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
44.5468 343.093 m
44.5468 341.958 44.7161 340.981 45.0546 340.164  c
45.3932 339.346 45.8489 338.739 46.4218 338.343  c
46.8593 338.020 47.3125 337.859 47.7812 337.859  c
48.5416 337.859 49.2239 338.250 49.8281 339.031  c
50.5885 339.989 50.9687 341.291 50.9687 342.937  c
50.9687 344.093 50.8020 345.072 50.4687 345.875  c
50.1354 346.677 49.7109 347.260 49.1953 347.625  c
48.6796 347.989 48.1822 348.171 47.7031 348.171  c
46.7552 348.171 45.9687 347.614 45.3437 346.500  c
44.8125 345.552 44.5468 344.416 44.5468 343.093  c
h
45.9843 343.281 m
45.9843 344.645 46.1510 345.760 46.4843 346.625  c
46.7656 347.354 47.1822 347.718 47.7343 347.718  c
47.9947 347.718 48.2656 347.599 48.5468 347.359  c
48.8281 347.119 49.0416 346.724 49.1875 346.171  c
49.4166 345.328 49.5312 344.140 49.5312 342.609  c
49.5312 341.484 49.4114 340.541 49.1718 339.781  c
49.0052 339.218 48.7812 338.822 48.5000 338.593  c
48.3020 338.427 48.0572 338.343 47.7656 338.343  c
47.4427 338.343 47.1510 338.494 46.8906 338.796  c
46.5364 339.203 46.2968 339.841 46.1718 340.710  c
46.0468 341.580 45.9843 342.437 45.9843 343.281  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
191.498 322.000 m
191.498 328.040 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
190.765 339.046 m
193.171 337.859 l
193.421 337.859 l
193.421 346.250 l
193.421 346.802 193.445 347.148 193.492 347.289  c
193.539 347.429 193.635 347.536 193.781 347.609  c
193.927 347.682 194.224 347.724 194.671 347.734  c
194.671 348.000 l
190.937 348.000 l
190.937 347.734 l
191.406 347.724 191.708 347.682 191.843 347.609  c
191.979 347.536 192.072 347.440 192.125 347.320  c
192.177 347.200 192.203 346.843 192.203 346.250  c
192.203 340.890 l
192.203 340.161 192.182 339.697 192.140 339.500  c
192.099 339.343 192.033 339.229 191.945 339.156  c
191.856 339.083 191.750 339.046 191.625 339.046  c
191.437 339.046 191.187 339.119 190.875 339.265  c
190.765 339.046 l
h
197.046 343.093 m
197.046 341.958 197.216 340.981 197.554 340.164  c
197.893 339.346 198.349 338.739 198.921 338.343  c
199.359 338.020 199.812 337.859 200.281 337.859  c
201.041 337.859 201.724 338.250 202.328 339.031  c
203.088 339.989 203.468 341.291 203.468 342.937  c
203.468 344.093 203.302 345.072 202.968 345.875  c
202.635 346.677 202.210 347.260 201.695 347.625  c
201.179 347.989 200.682 348.171 200.203 348.171  c
199.255 348.171 198.468 347.614 197.843 346.500  c
197.312 345.552 197.046 344.416 197.046 343.093  c
h
198.484 343.281 m
198.484 344.645 198.651 345.760 198.984 346.625  c
199.265 347.354 199.682 347.718 200.234 347.718  c
200.494 347.718 200.765 347.599 201.046 347.359  c
201.328 347.119 201.541 346.724 201.687 346.171  c
201.916 345.328 202.031 344.140 202.031 342.609  c
202.031 341.484 201.911 340.541 201.671 339.781  c
201.505 339.218 201.281 338.822 201.000 338.593  c
200.802 338.427 200.557 338.343 200.265 338.343  c
199.942 338.343 199.651 338.494 199.390 338.796  c
199.036 339.203 198.796 339.841 198.671 340.710  c
198.546 341.580 198.484 342.437 198.484 343.281  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
340.997 322.000 m
340.997 328.040 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
344.875 346.093 m
344.187 348.000 l
338.328 348.000 l
338.328 347.734 l
340.046 346.161 341.257 344.875 341.960 343.875  c
342.664 342.875 343.015 341.963 343.015 341.140  c
343.015 340.515 342.822 340.000 342.437 339.593  c
342.052 339.187 341.588 338.984 341.046 338.984  c
340.567 338.984 340.132 339.127 339.742 339.414  c
339.351 339.700 339.062 340.119 338.875 340.671  c
338.609 340.671 l
338.734 339.765 339.049 339.070 339.554 338.585  c
340.059 338.101 340.687 337.859 341.437 337.859  c
342.250 337.859 342.924 338.119 343.460 338.640  c
343.997 339.161 344.265 339.770 344.265 340.468  c
344.265 340.968 344.151 341.474 343.921 341.984  c
343.557 342.776 342.968 343.609 342.156 344.484  c
340.947 345.817 340.187 346.619 339.875 346.890  c
342.468 346.890 l
343.000 346.890 343.372 346.872 343.585 346.835  c
343.799 346.799 343.992 346.721 344.164 346.601  c
344.335 346.481 344.484 346.312 344.609 346.093  c
344.875 346.093 l
h
346.046 343.093 m
346.046 341.958 346.216 340.981 346.554 340.164  c
346.893 339.346 347.349 338.739 347.921 338.343  c
348.359 338.020 348.812 337.859 349.281 337.859  c
350.041 337.859 350.724 338.250 351.328 339.031  c
352.088 339.989 352.468 341.291 352.468 342.937  c
352.468 344.093 352.302 345.072 351.968 345.875  c
351.635 346.677 351.210 347.260 350.695 347.625  c
350.179 347.989 349.682 348.171 349.203 348.171  c
348.255 348.171 347.468 347.614 346.843 346.500  c
346.312 345.552 346.046 344.416 346.046 343.093  c
h
347.484 343.281 m
347.484 344.645 347.651 345.760 347.984 346.625  c
348.265 347.354 348.682 347.718 349.234 347.718  c
349.494 347.718 349.765 347.599 350.046 347.359  c
350.328 347.119 350.541 346.724 350.687 346.171  c
350.916 345.328 351.031 344.140 351.031 342.609  c
351.031 341.484 350.911 340.541 350.671 339.781  c
350.505 339.218 350.281 338.822 350.000 338.593  c
349.802 338.427 349.557 338.343 349.265 338.343  c
348.942 338.343 348.651 338.494 348.390 338.796  c
348.036 339.203 347.796 339.841 347.671 340.710  c
347.546 341.580 347.484 342.437 347.484 343.281  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
490.496 322.000 m
490.496 328.040 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
488.765 339.953 m
489.046 339.286 489.403 338.770 489.835 338.406  c
490.268 338.041 490.807 337.859 491.453 337.859  c
492.244 337.859 492.854 338.119 493.281 338.640  c
493.604 339.026 493.765 339.437 493.765 339.875  c
493.765 340.604 493.312 341.354 492.406 342.125  c
493.010 342.364 493.468 342.705 493.781 343.148  c
494.093 343.591 494.250 344.114 494.250 344.718  c
494.250 345.572 493.979 346.312 493.437 346.937  c
492.718 347.760 491.687 348.171 490.343 348.171  c
489.666 348.171 489.208 348.088 488.968 347.921  c
488.729 347.755 488.609 347.578 488.609 347.390  c
488.609 347.244 488.666 347.119 488.781 347.015  c
488.895 346.911 489.031 346.859 489.187 346.859  c
489.312 346.859 489.437 346.880 489.562 346.921  c
489.645 346.942 489.835 347.028 490.132 347.179  c
490.429 347.330 490.630 347.421 490.734 347.453  c
490.921 347.505 491.114 347.531 491.312 347.531  c
491.812 347.531 492.247 347.338 492.617 346.953  c
492.987 346.567 493.171 346.114 493.171 345.593  c
493.171 345.208 493.088 344.833 492.921 344.468  c
492.786 344.187 492.645 343.979 492.500 343.843  c
492.291 343.645 492.002 343.468 491.632 343.312  c
491.263 343.156 490.890 343.078 490.515 343.078  c
490.281 343.078 l
490.281 342.843 l
490.666 342.802 491.052 342.666 491.437 342.437  c
491.822 342.208 492.104 341.932 492.281 341.609  c
492.458 341.286 492.546 340.932 492.546 340.546  c
492.546 340.046 492.390 339.640 492.078 339.328  c
491.765 339.015 491.375 338.859 490.906 338.859  c
490.145 338.859 489.510 339.265 489.000 340.078  c
488.765 339.953 l
h
496.046 343.093 m
496.046 341.958 496.216 340.981 496.554 340.164  c
496.893 339.346 497.349 338.739 497.921 338.343  c
498.359 338.020 498.812 337.859 499.281 337.859  c
500.041 337.859 500.724 338.250 501.328 339.031  c
502.088 339.989 502.468 341.291 502.468 342.937  c
502.468 344.093 502.302 345.072 501.968 345.875  c
501.635 346.677 501.210 347.260 500.695 347.625  c
500.179 347.989 499.682 348.171 499.203 348.171  c
498.255 348.171 497.468 347.614 496.843 346.500  c
496.312 345.552 496.046 344.416 496.046 343.093  c
h
497.484 343.281 m
497.484 344.645 497.651 345.760 497.984 346.625  c
498.265 347.354 498.682 347.718 499.234 347.718  c
499.494 347.718 499.765 347.599 500.046 347.359  c
500.328 347.119 500.541 346.724 500.687 346.171  c
500.916 345.328 501.031 344.140 501.031 342.609  c
501.031 341.484 500.911 340.541 500.671 339.781  c
500.505 339.218 500.281 338.822 500.000 338.593  c
499.802 338.427 499.557 338.343 499.265 338.343  c
498.942 338.343 498.651 338.494 498.390 338.796  c
498.036 339.203 497.796 339.841 497.671 340.710  c
497.546 341.580 497.484 342.437 497.484 343.281  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
639.995 322.000 m
639.995 328.040 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
643.984 344.343 m
643.984 345.375 l
642.640 345.375 l
642.640 348.000 l
641.437 348.000 l
641.437 345.375 l
637.234 345.375 l
637.234 344.437 l
641.843 337.859 l
642.640 337.859 l
642.640 344.343 l
643.984 344.343 l
h
641.437 344.343 m
641.437 339.406 l
637.953 344.343 l
641.437 344.343 l
h
645.046 343.093 m
645.046 341.958 645.216 340.981 645.554 340.164  c
645.893 339.346 646.349 338.739 646.921 338.343  c
647.359 338.020 647.812 337.859 648.281 337.859  c
649.041 337.859 649.724 338.250 650.328 339.031  c
651.088 339.989 651.468 341.291 651.468 342.937  c
651.468 344.093 651.302 345.072 650.968 345.875  c
650.635 346.677 650.210 347.260 649.695 347.625  c
649.179 347.989 648.682 348.171 648.203 348.171  c
647.255 348.171 646.468 347.614 645.843 346.500  c
645.312 345.552 645.046 344.416 645.046 343.093  c
h
646.484 343.281 m
646.484 344.645 646.651 345.760 646.984 346.625  c
647.265 347.354 647.682 347.718 648.234 347.718  c
648.494 347.718 648.765 347.599 649.046 347.359  c
649.328 347.119 649.541 346.724 649.687 346.171  c
649.916 345.328 650.031 344.140 650.031 342.609  c
650.031 341.484 649.911 340.541 649.671 339.781  c
649.505 339.218 649.281 338.822 649.000 338.593  c
648.802 338.427 648.557 338.343 648.265 338.343  c
647.942 338.343 647.651 338.494 647.390 338.796  c
647.036 339.203 646.796 339.841 646.671 340.710  c
646.546 341.580 646.484 342.437 646.484 343.281  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
789.494 322.000 m
789.494 328.040 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
793.515 338.062 m
792.937 339.312 l
789.953 339.312 l
789.296 340.640 l
790.588 340.838 791.614 341.322 792.375 342.093  c
793.020 342.750 793.343 343.531 793.343 344.437  c
793.343 344.958 793.239 345.440 793.031 345.882  c
792.822 346.325 792.557 346.703 792.234 347.015  c
791.911 347.328 791.552 347.578 791.156 347.765  c
790.593 348.036 790.015 348.171 789.421 348.171  c
788.828 348.171 788.395 348.070 788.125 347.867  c
787.854 347.664 787.718 347.442 787.718 347.203  c
787.718 347.067 787.776 346.947 787.890 346.843  c
788.005 346.739 788.145 346.687 788.312 346.687  c
788.437 346.687 788.546 346.705 788.640 346.742  c
788.734 346.778 788.895 346.880 789.125 347.046  c
789.500 347.296 789.875 347.421 790.250 347.421  c
790.822 347.421 791.322 347.205 791.750 346.773  c
792.177 346.341 792.390 345.812 792.390 345.187  c
792.390 344.593 792.197 344.036 791.812 343.515  c
791.427 342.994 790.895 342.593 790.218 342.312  c
789.687 342.093 788.963 341.963 788.046 341.921  c
789.953 338.062 l
793.515 338.062 l
h
795.046 343.093 m
795.046 341.958 795.216 340.981 795.554 340.164  c
795.893 339.346 796.349 338.739 796.921 338.343  c
797.359 338.020 797.812 337.859 798.281 337.859  c
799.041 337.859 799.724 338.250 800.328 339.031  c
801.088 339.989 801.468 341.291 801.468 342.937  c
801.468 344.093 801.302 345.072 800.968 345.875  c
800.635 346.677 800.210 347.260 799.695 347.625  c
799.179 347.989 798.682 348.171 798.203 348.171  c
797.255 348.171 796.468 347.614 795.843 346.500  c
795.312 345.552 795.046 344.416 795.046 343.093  c
h
796.484 343.281 m
796.484 344.645 796.651 345.760 796.984 346.625  c
797.265 347.354 797.682 347.718 798.234 347.718  c
798.494 347.718 798.765 347.599 799.046 347.359  c
799.328 347.119 799.541 346.724 799.687 346.171  c
799.916 345.328 800.031 344.140 800.031 342.609  c
800.031 341.484 799.911 340.541 799.671 339.781  c
799.505 339.218 799.281 338.822 799.000 338.593  c
798.802 338.427 798.557 338.343 798.265 338.343  c
797.942 338.343 797.651 338.494 797.390 338.796  c
797.036 339.203 796.796 339.841 796.671 340.710  c
796.546 341.580 796.484 342.437 796.484 343.281  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
116.749 322.000 m
116.749 325.020 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
266.248 322.000 m
266.248 325.020 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
415.747 322.000 m
415.747 325.020 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
565.246 322.000 m
565.246 325.020 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
714.744 322.000 m
714.744 325.020 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
Q
2 J
0 j
q
0 J
1 j
newpath
40.0000 322.000 m
40.0000 1.00314 l
S
newpath
791.494 322.000 m
791.494 1.00314 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 154 8 15 rc
Q
cliprestore
newpath
0 0 m
0 362.000 l
798.000 362.000 l
798.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
1.00000 w
2 J
0 j
newpath
40.0000 288.103 m
33.9600 288.103 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
20 286 8 16 rc
newpath
32.4531 294.890 m
22.5468 294.890 l
22.5468 294.109 l
32.4531 294.109 l
32.4531 294.890 l
h
f
Q
newpath
30.7656 290.953 m
31.0468 290.286 31.4036 289.770 31.8359 289.406  c
32.2682 289.041 32.8072 288.859 33.4531 288.859  c
34.2447 288.859 34.8541 289.119 35.2812 289.640  c
35.6041 290.026 35.7656 290.437 35.7656 290.875  c
35.7656 291.604 35.3125 292.354 34.4062 293.125  c
35.0104 293.364 35.4687 293.705 35.7812 294.148  c
36.0937 294.591 36.2500 295.114 36.2500 295.718  c
36.2500 296.572 35.9791 297.312 35.4375 297.937  c
34.7187 298.760 33.6875 299.171 32.3437 299.171  c
31.6666 299.171 31.2083 299.088 30.9687 298.921  c
30.7291 298.755 30.6093 298.578 30.6093 298.390  c
30.6093 298.244 30.6666 298.119 30.7812 298.015  c
30.8958 297.911 31.0312 297.859 31.1875 297.859  c
31.3125 297.859 31.4375 297.880 31.5625 297.921  c
31.6458 297.942 31.8359 298.028 32.1328 298.179  c
32.4296 298.330 32.6302 298.421 32.7343 298.453  c
32.9218 298.505 33.1145 298.531 33.3125 298.531  c
33.8125 298.531 34.2474 298.338 34.6171 297.953  c
34.9869 297.567 35.1718 297.114 35.1718 296.593  c
35.1718 296.208 35.0885 295.833 34.9218 295.468  c
34.7864 295.187 34.6458 294.979 34.5000 294.843  c
34.2916 294.645 34.0026 294.468 33.6328 294.312  c
33.2630 294.156 32.8906 294.078 32.5156 294.078  c
32.2812 294.078 l
32.2812 293.843 l
32.6666 293.802 33.0520 293.666 33.4375 293.437  c
33.8229 293.208 34.1041 292.932 34.2812 292.609  c
34.4583 292.286 34.5468 291.932 34.5468 291.546  c
34.5468 291.046 34.3906 290.640 34.0781 290.328  c
33.7656 290.015 33.3750 289.859 32.9062 289.859  c
32.1458 289.859 31.5104 290.265 31.0000 291.078  c
30.7656 290.953 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
40.0000 240.125 m
33.9600 240.125 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
20 238 8 16 rc
newpath
32.4531 246.890 m
22.5468 246.890 l
22.5468 246.109 l
32.4531 246.109 l
32.4531 246.890 l
h
f
Q
newpath
36.8750 249.093 m
36.1875 251.000 l
30.3281 251.000 l
30.3281 250.734 l
32.0468 249.161 33.2578 247.875 33.9609 246.875  c
34.6640 245.875 35.0156 244.963 35.0156 244.140  c
35.0156 243.515 34.8229 243.000 34.4375 242.593  c
34.0520 242.187 33.5885 241.984 33.0468 241.984  c
32.5677 241.984 32.1328 242.127 31.7421 242.414  c
31.3515 242.700 31.0625 243.119 30.8750 243.671  c
30.6093 243.671 l
30.7343 242.765 31.0494 242.070 31.5546 241.585  c
32.0599 241.101 32.6875 240.859 33.4375 240.859  c
34.2500 240.859 34.9244 241.119 35.4609 241.640  c
35.9974 242.161 36.2656 242.770 36.2656 243.468  c
36.2656 243.968 36.1510 244.474 35.9218 244.984  c
35.5572 245.776 34.9687 246.609 34.1562 247.484  c
32.9479 248.817 32.1875 249.619 31.8750 249.890  c
34.4687 249.890 l
35.0000 249.890 35.3724 249.872 35.5859 249.835  c
35.7994 249.799 35.9921 249.721 36.1640 249.601  c
36.3359 249.481 36.4843 249.312 36.6093 249.093  c
36.8750 249.093 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
40.0000 192.148 m
33.9600 192.148 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
20 190 8 16 rc
newpath
32.4531 198.890 m
22.5468 198.890 l
22.5468 198.109 l
32.4531 198.109 l
32.4531 198.890 l
h
f
Q
newpath
31.7656 194.046 m
34.1718 192.859 l
34.4218 192.859 l
34.4218 201.250 l
34.4218 201.802 34.4453 202.148 34.4921 202.289  c
34.5390 202.429 34.6354 202.536 34.7812 202.609  c
34.9270 202.682 35.2239 202.724 35.6718 202.734  c
35.6718 203.000 l
31.9375 203.000 l
31.9375 202.734 l
32.4062 202.724 32.7083 202.682 32.8437 202.609  c
32.9791 202.536 33.0729 202.440 33.1250 202.320  c
33.1770 202.200 33.2031 201.843 33.2031 201.250  c
33.2031 195.890 l
33.2031 195.161 33.1822 194.697 33.1406 194.500  c
33.0989 194.343 33.0338 194.229 32.9453 194.156  c
32.8567 194.083 32.7500 194.046 32.6250 194.046  c
32.4375 194.046 32.1875 194.119 31.8750 194.265  c
31.7656 194.046 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
40.0000 144.171 m
33.9600 144.171 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
30.5468 150.093 m
30.5468 148.958 30.7161 147.981 31.0546 147.164  c
31.3932 146.346 31.8489 145.739 32.4218 145.343  c
32.8593 145.020 33.3125 144.859 33.7812 144.859  c
34.5416 144.859 35.2239 145.250 35.8281 146.031  c
36.5885 146.989 36.9687 148.291 36.9687 149.937  c
36.9687 151.093 36.8020 152.072 36.4687 152.875  c
36.1354 153.677 35.7109 154.260 35.1953 154.625  c
34.6796 154.989 34.1822 155.171 33.7031 155.171  c
32.7552 155.171 31.9687 154.614 31.3437 153.500  c
30.8125 152.552 30.5468 151.416 30.5468 150.093  c
h
31.9843 150.281 m
31.9843 151.645 32.1510 152.760 32.4843 153.625  c
32.7656 154.354 33.1822 154.718 33.7343 154.718  c
33.9947 154.718 34.2656 154.599 34.5468 154.359  c
34.8281 154.119 35.0416 153.724 35.1875 153.171  c
35.4166 152.328 35.5312 151.140 35.5312 149.609  c
35.5312 148.484 35.4114 147.541 35.1718 146.781  c
35.0052 146.218 34.7812 145.822 34.5000 145.593  c
34.3020 145.427 34.0572 145.343 33.7656 145.343  c
33.4427 145.343 33.1510 145.494 32.8906 145.796  c
32.5364 146.203 32.2968 146.841 32.1718 147.710  c
32.0468 148.580 31.9843 149.437 31.9843 150.281  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
40.0000 96.1936 m
33.9600 96.1936 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
31.7656 98.0468 m
34.1718 96.8593 l
34.4218 96.8593 l
34.4218 105.250 l
34.4218 105.802 34.4453 106.148 34.4921 106.289  c
34.5390 106.429 34.6354 106.536 34.7812 106.609  c
34.9270 106.682 35.2239 106.724 35.6718 106.734  c
35.6718 107.000 l
31.9375 107.000 l
31.9375 106.734 l
32.4062 106.724 32.7083 106.682 32.8437 106.609  c
32.9791 106.536 33.0729 106.440 33.1250 106.320  c
33.1770 106.200 33.2031 105.843 33.2031 105.250  c
33.2031 99.8906 l
33.2031 99.1614 33.1822 98.6979 33.1406 98.5000  c
33.0989 98.3437 33.0338 98.2291 32.9453 98.1562  c
32.8567 98.0833 32.7500 98.0468 32.6250 98.0468  c
32.4375 98.0468 32.1875 98.1197 31.8750 98.2656  c
31.7656 98.0468 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
40.0000 48.2162 m
33.9600 48.2162 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
36.8750 57.0937 m
36.1875 59.0000 l
30.3281 59.0000 l
30.3281 58.7343 l
32.0468 57.1614 33.2578 55.8750 33.9609 54.8750  c
34.6640 53.8750 35.0156 52.9635 35.0156 52.1406  c
35.0156 51.5156 34.8229 51.0000 34.4375 50.5937  c
34.0520 50.1875 33.5885 49.9843 33.0468 49.9843  c
32.5677 49.9843 32.1328 50.1276 31.7421 50.4140  c
31.3515 50.7005 31.0625 51.1197 30.8750 51.6718  c
30.6093 51.6718 l
30.7343 50.7656 31.0494 50.0703 31.5546 49.5859  c
32.0599 49.1015 32.6875 48.8593 33.4375 48.8593  c
34.2500 48.8593 34.9244 49.1197 35.4609 49.6406  c
35.9974 50.1614 36.2656 50.7708 36.2656 51.4687  c
36.2656 51.9687 36.1510 52.4739 35.9218 52.9843  c
35.5572 53.7760 34.9687 54.6093 34.1562 55.4843  c
32.9479 56.8177 32.1875 57.6197 31.8750 57.8906  c
34.4687 57.8906 l
35.0000 57.8906 35.3724 57.8724 35.5859 57.8359  c
35.7994 57.7994 35.9921 57.7213 36.1640 57.6015  c
36.3359 57.4817 36.4843 57.3125 36.6093 57.0937  c
36.8750 57.0937 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
40.0000 312.092 m
36.9800 312.092 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
40.0000 264.114 m
36.9800 264.114 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
40.0000 216.137 m
36.9800 216.137 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
40.0000 168.159 m
36.9800 168.159 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
40.0000 120.182 m
36.9800 120.182 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
40.0000 72.2049 m
36.9800 72.2049 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
q
0 w
1.00000 w
2 J
0 j
newpath
40.0000 24.2275 m
36.9800 24.2275 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 w
0 J
1 j
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 808 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
